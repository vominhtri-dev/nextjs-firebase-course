import { Box, Container } from '@chakra-ui/react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useEffect } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import { collection, getDocs, query, where } from 'firebase/firestore'
import { db } from '../../firebase.config'
import {
    addProfile,
    resetLoading,
    setIsCurrentUser,
} from '../../redux/slice/profileSlice'
import ProfileBreadCrumb from '../../components/pages/profile/ProfileBreadCrumb'
import ProfileContainer from '../../components/pages/profile/ProfileContainer'

export default function Profile() {
    const { profile, trigger } = useSelector((sta) => sta.profile)
    const { currentUser } = useSelector((st) => st.auth)
    const dispatch = useDispatch()
    const router = useRouter()

    // fetch course detail
    useEffect(() => {
        async function getProfile() {
            try {
                // query uid in users collection
                const slugUid = router.query.param[0]
                const q = query(
                    collection(db, 'users'),
                    where('uid', '==', slugUid)
                )
                const result = await getDocs(q)
                if (result.docs.length > 0) {
                    const doc = result.docs[0]
                    const userDoc = { _id: doc.id, ...doc.data() }
                    // Redirect in to overview
                    dispatch(addProfile(userDoc))
                } else {
                    console.log('user not found')
                    router.push('/404')
                }
            } catch (error) {
                console.log(error)
            }
        }

        getProfile()
        return () => {
            dispatch(resetLoading())
        }
    }, [trigger, dispatch, router.query.param[0]])

    // Check is current user view profile
    useEffect(() => {
        dispatch(setIsCurrentUser(profile.uid === currentUser.uid))
        // in case user try to view the profile not same with they account
        if (profile.uid !== currentUser.uid) {
            if (router.query.param[1] !== 'overview') {
                router.push(`/profile/${router.query.param[0]}/overview`)
            }
        }
    }, [profile, currentUser, router.query])

    return (
        <>
            <Head>
                <title>
                    {`Hồ sơ ${profile?.displayName}` || 'Đang tải'} | Tridev.io
                    - Học lập trình miễn phí | Học lập trình cho người mới
                </title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' type='image/png' href='/code.png' />
            </Head>
            <Box pb='4' pt='8'>
                <Container maxW={[1024]}>
                    {/* BreadCrumb  */}
                    <ProfileBreadCrumb />
                    {/* Container  */}
                    <ProfileContainer />
                </Container>
            </Box>
        </>
    )
}
