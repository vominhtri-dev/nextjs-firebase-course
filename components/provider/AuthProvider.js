import { useDispatch, useSelector } from 'react-redux'
import React, { useEffect } from 'react'
import { loginAction, setLoadingAction } from '../../redux/slice/authSlice'
import { observerService } from '../../service/auth'
import Loading from '../layouts/Loading'
import { collection, getDocs, query, where } from 'firebase/firestore'
import { db } from '../../firebase.config'
import Head from 'next/head'

const AuthProvider = ({ children }) => {
    const { isLoading } = useSelector((st) => st.auth)
    const dispatch = useDispatch()

    // to check firebase auth state
    useEffect(() => {
        const unsubscribe = observerService(async (user) => {
            if (user) {
                const { email, accessToken, uid, displayName, photoURL } = user
                let isAdmin = false
                const usersRef = collection(db, 'users')
                const q = query(
                    usersRef,
                    where('isAdmin', '==', true),
                    where('uid', '==', uid)
                )
                const querySnapshot = await getDocs(q)
                if (!querySnapshot.empty) isAdmin = true

                dispatch(
                    loginAction({
                        email,
                        accessToken,
                        displayName,
                        uid,
                        isAdmin,
                        photoURL,
                    })
                )
            } else {
                dispatch(setLoadingAction(false))
            }
        })
        return () => unsubscribe()
    }, [dispatch])

    if (isLoading) {
        return (
            <>
                <Head>
                    <title>
                        Đang tải - Học lập trình miễn phí | Học lập trình
                        Javascript | Học lập trình cho người mới
                    </title>
                    <meta
                        name='description'
                        content='Generated by create next app'
                    />
                    <link rel='icon' type='image/png' href='/code.png' />
                </Head>

                <Loading />
            </>
        )
    }

    return <>{children}</>
}

export default AuthProvider
